# -*- coding: utf-8 -*-
"""Mini_case2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12lpc-Deio6LA1BfIbEnWf7UaGN2WSLt9

# **DATA VISUALIZATION WITH PYTHON**


> Pada kali ini saya akan menyampaikan bagaimana cara memvisualisasikan data menggunakan bahasa pemrograman python. Namun, sebelum itu kita terlebih dahulu mempersiapkan dataset. Untuk kali ini saya menggunakan dataset berupa list perusahaan startup unicorn yang saya dapatkan dari **Kaggle**. Dalam dataset ini terdiri dari beberapa kolom yaitu Company,	Valuation(US$ billions),	Valuation date,	Industry,	Country/countries, and	Founder(s).

> Mari langsung saja kita mulai dari tahap pertama yaitu import library dan dataset. Import library seperti **numpy, matplotlib.pyplot,** dan **pandas** ini bertujuan agar memudahkan menganalisa dan memvisualisasikan data dengan menggunakan syntax yang ada di library tersebut. Untuk import library dan dataset dapat menggunakan syntax sebagai berikut.
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from google.colab import files
import io
data = files.upload()

"""> Setelah data ter-*import* kita cek dan baca terlebih dahulu data dengan format csv menggunakan pandas agar memudahkan manipulasi dan analisis data seperti mengubah type data, menghapus kolom/baris *null*, dan masih banyak lagi."""

df = pd.read_csv(io.StringIO(data['List of Unicorn Startup Companies.csv'].decode('utf-8')))
df

"""> Mari lanjut, setelah data ter-*import* kita lakukan *data cleansing*, namun sebelum *data cleansing* kita cek terlebih tipe data dan baris/kolom *null* pada data."""

df.info()

"""> Setelah di cek ternyata ada beberapa tipe kolom yang tidak sesuai yaitu kolom **Valuation(US$ billions)** dan **Valuation date**. Dan juga ada beberapa kolom yang memiliki null yaitu kolom **Industry** dan **Founder (s)**.


> Setelah kita ketahui *problem*-nya, mari kita lakukan cleansing data pada kolom yang memiliki *null*. Pada kolom **Industry** yang null kita ganti dengan **"Others"** dan *null* pada kolom **Founder (s)** kita ganti dengan **"Unknown"** menggunakan syntax di bawah.


"""

df["Industry"] = df["Industry"].fillna("Others")
df["Founder(s)"] = df["Founder(s)"].fillna("Unknown")

"""> Kita lanjutkan dengan cleansing data pada kolom yang type data yang tidak sesuai. pertama kita ubah type data kolom **Valuation (US$ billions)** menjadi float. Namun Pada kolom ini tidak dapat langsung dilakukan dengan menggunakan syntax tersebut . karena pada kolom ini banyak karakter yang salah yang menyebabkan kolom ini tidak bisa menjalankan syntax tersebut. antara lain di baris kolom ini setelah penulisan angka terdapat karakter **"+"** yang dapat menyebabkan kesulitan menghitung dan menganalisa nanti. oleh karena itu, kita hapus karakter tersebut menggunakan **syntax replace**. Dan pada baris kolom ini juga terdapat kata **"undisclosed"** yang menyebabkan kesulitan menganalisa juga. oleh karena itu kita gunakan syntax replace untuk mengganti/menghapus karakter dan kata tersebut.  """

df['Valuation(US$ billions)'].replace('\+', '', regex=True, inplace=True)
df['Valuation(US$ billions)'].replace('Undisclosed', '0', regex=True, inplace=True)
df

"""> Setelah kita bersihkan baris pada kolom tersebut langsung saja kita ubah type data menjadi float dan cek menggunakan sytax yang tersedia di bawah apakah tipe data sudah berubah atau belum."""

df['Valuation(US$ billions)'] = df['Valuation(US$ billions)'].fillna(0).astype(float)
df.info()
df

"""> Di lanjutkan dengan mengubah tipe data kolom **Valuation date** menjadi **datetime**. namun sama seperti kasus sebelumnya kolom ini juga terdapat problem yang tidak bisa mengubah tipe data secara langsung menggunakan **syntax datetime**, harus dilakukan penghapusan beberapa karakter dan angka pada baris kolom ini setelah penulisan tahun. Untuk menghapusnya kita dapat menggunakan syntax replace dimana kita mengganti karakter-karakter dan angka-angka tersebut dengan nilai **" "/(kosong)**. setelah angka dan karakter tersebut terganti kita dapat lakukan dengan mengubah tipe data menjadi datetime menggunakan **syntax datetime**."""

df['Valuation date'] = df['Valuation date'].str.replace(r'\[.*\]', '', regex=True)

df['Valuation date'] = pd.to_datetime(df['Valuation date'])
df.info()

"""**Data Visualization**
> Setelah dilakukan cleansing data, kita mulai untuk **visualisasi data**. step pertama kita tentukan kolom mana saja yang ingin kita visualisasi. misal saya ingin memvisualisasikan jumlah startup unicorn yanag terdaftar dari tahun ke tahun. sehingga data yang saya butuhkan yaitu data **tahun** dan **total company**.
> Untuk data tahun kita buat kolom baru dengan menarik karakter "tahun" saja dari kolom **Valuation date** menggunakan syntax **strftime**. Disini **Valuation date** kita definisikan sebagai data waktu terdaftarnya sebuah company di Startup Unicorn.


"""

df['Valuation year'] = df['Valuation date'].dt.strftime("%Y")
# syntax del ini berfungsi untuk menghapus kolom "Unnamed: 0"
del df['Unnamed: 0']
df

"""> Langsung saja kita buat visualisasinya menggunakan **line chart** dengan title **"Trend of Unicorn Startup"** dan sumbu x menggunakan data **valuation year** sebagai **year** dan sumbu y **company** sebagi **total company**. Untuk membuat visualisasi ini dapat menggunakan syntax berikut :"""

trend_startup = df.groupby('Valuation year')['Company'].count().reset_index()
plt.plot(trend_startup['Valuation year'], trend_startup['Company'])
plt.title('Trend of Unicorn Startup', size=14)
plt.xlabel('Year', size=12)
plt.ylabel('Total company', size=12)
plt.xticks(size=10)
plt.yticks(size=10)
plt.show()

"""> Selanjutnya ingin membuat visualisasi **Top 10 Country Valuation of Unicorn Startup** menggunakan **bar chart horizontal**. Maka data yang kita butuhkan yaitu **Valuation(US$ billions)** dan **Country/contries**. In this case, Valuation dirata-ratakan setiap masing-masing country/countries. Untuk syntax visualisasinya dapat menggunakan syntax di bawah ini : """

country_valuation = df.groupby('Country/countries')['Valuation(US$ billions)'].mean().reset_index()
top10_country_valuation = country_valuation.sort_values(by='Valuation(US$ billions)', ascending=False).head(10)
top10_country_valuation 
plt.figure(figsize=(7,4))
plt.barh(top10_country_valuation['Country/countries'], top10_country_valuation['Valuation(US$ billions)'])
plt.title('Top 10 Country Valuation of Unicorn Startup', size=14)
plt.ylabel('Country', size=10)
plt.xlabel('Valuation', size=10)
plt.yticks(size=7)
plt.xticks(size=7)
plt.show()

"""> Terakhir saya ingin melihat **10 teratas industri** apa saja yang banyak terdaftar **di Startup Unicorn**. untuk dapat melihatnya kita dapat dengan membuat visualisasi menggunakan jenis chart yang sesuai. Kali saya ingin membuatnya menggunakan **pie chart**. Untuk membuat pie chart 10 teratas industri pada unicorn starup dapat menggunakan syntax berikut ini."""

indutry_counts = df['Industry'].value_counts()
top10_industry = indutry_counts.head(10)
plt.pie(top10_industry, labels=top10_industry.index, autopct='%1.0f%%')
plt.title('Top 10 Industry of Unicorn Startup', size=14)
plt.show()

"""> Sekian mengenai cara visualisasi data menggunakan bahasa pemrograman phython yang saya sampaikan kali ini. saat ini saya masih banyak belajar sehingga mungkin masih banyak kekurangan dan kesalahan yang terjadi baik dalam penyampaian maupun syntax yang sulit dipahami. saya berharap mendapatkan feedback dari pembaca untuk memperbaiki kekurangan dan kesalahan ini.


# **THANK YOU âœŒ**


"""